<?php

namespace app\modules\service\controllers;

use app\common\application\StateConfig;
use app\common\components\AppRedisKeyMap;
use app\modules\patient\behavior\OrderJson;
use app\modules\patient\data\OrderInput;
use app\modules\patient\data\OrderOutput;
use Yii;
use yii\web\Response;
use app\common\data\Response as UResponse;
use app\common\application\RabbitConfig;

class PayController extends \yii\web\Controller
{

    public $enableCsrfValidation = false;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        Yii::$app->runData->set("isCardToOrder", false);
    }

    public function behaviors()
    {
        return [
            [
                'class' => 'app\common\filters\PatientFilter',
                'only'  => ['getpayorder', 'getweipayorder','getunionorder'],
            ],
        ];
    }

    /**
     * 创建支付订单
     * @return array
     * @throws \yii\base\InvalidRouteException
     */
    public function actionGetpayorder()
    {
        $orderId = Yii::$app->getParams->get("order_id");
        if (!$orderId) {
            return UResponse::formatData(UResponse::$code['InvalidArgument'], "提交信息有误");
        }
        $modules = Yii::$app->getModule("patient");
        $result = $modules->runAction('userorder/getInfoById',
            ['id' => $orderId]);
        if (!$result || $result['is_delete'] != StateConfig::$activeFlag['yes']['val']) {
            return UResponse::formatData(UResponse::$code['InvalidArgument'], "提交信息有误");
        }
        if (!$result['can_pay']) {
            return UResponse::formatData(UResponse::$code['InvalidArgument'], "提交信息有误");
        }
        $orderStateConfig = StateConfig::getOrderStatus($result['order_version'])["ordertype" . $result['order_type']];
        $orderStateConfig = isset($orderStateConfig['vip'.$result['vip_type']])?$orderStateConfig['vip'.$result['vip_type']]['type' . $result['order_state']]:$orderStateConfig['type' . $result['order_state']];
        if ($orderStateConfig['expire'] > 0) {
            if ($result['update_time'] + ($orderStateConfig['expire'] * 3600) < time()) {
                return UResponse::formatData(UResponse::$code['Expire'], "该订单已超时，不能支付");
            }
        }
        $money = $result['pay_money'];
        $money = sprintf("%.2f", $money);
        $payFlag = false;
        $cidFlag = false;
        $cid  = Yii::$app->getParams->get("cid"); //优惠卷编号
        if ($cid){
        	$cidFlag = true;
        	$orderCoupon = $modules->runAction('ordercoupon/getcouponbycid',
            ['cid' => $cid]);
        	if (!$orderCoupon){
        		return UResponse::formatData(UResponse::$code['InvalidArgument'], "优惠卷信息有误");
        	}
        	if($orderCoupon['expiry_time'] < time()){
        		return UResponse::formatData(UResponse::$code['InvalidArgument'], "优惠卷已经过期");
        	}
        	if($orderCoupon['order_type'] >0 && $result['order_type'] != $orderCoupon['order_type']){
        		return UResponse::formatData(UResponse::$code['InvalidArgument'], "优惠卷不适用当前订单");
        	}
        	$rule = StateConfig::$coupon_use_rule;
        	if(isset($rule[$orderCoupon['use_rule']])){
                $rule  = $rule[$orderCoupon['use_rule']];
                $small = $rule['0']+0;
                if($money<$small){
                    return UResponse::formatData(UResponse::$code['InvalidArgument'], $orderCoupon['rule_desc']);
                }
                $big = $rule['1']+0;
                if($money>$big){
                    return UResponse::formatData(UResponse::$code['InvalidArgument'], $orderCoupon['rule_desc']);
                }
            }
        	$money = $money-$orderCoupon['order_money'];
        	if($money<=0){
        	    $money = sprintf("%.2f", '0');  //不用支付
        	    $payFlag = true;
        	}
        }
        $orderStatus = StateConfig::getOrderStatus($result['order_version'])['ordertype' . $result['order_type']];
        $desc = isset($orderStatus['vip'.$result['vip_type']])?$orderStatus['vip'.$result['vip_type']]['type' . $result['order_state']]['out_desc']:$orderStatus['type' . $result['order_state']]['out_desc'];
        if (CONF_ENV != "pro_" && !$payFlag) {
            $money = "0.01";
        }
        $desc = StateConfig::getPayDesc($desc, $result['order_type_desc'], $result['vip_type'], $result['section_name']);

        $payId = Yii::$app->DBID->getID('db.pay_accompany');
        $payOrder = [
            "pay_id"        => $payId,
            "user_id"       => $result['user_id'],
            "order_id"      => substr($result['order_id'], 6),
            "pay_money"     => $result['pay_money'],
            "pay_type"      => 1,
            "pay_status"    => 0,
            "pay_account"   => '',
            "pay_order_id"  => "",
            "order_type"    => $result['order_type'],
            "order_state"   => $result['order_state'],
            "requestParams" => '[]',
            "is_delete"     => 1,
        	"coupon_id"     => $cid?$cid:'0',
        ];
        $payResult = $modules->runAction('pay/create',
            ['info' => $payOrder]);
        //免费的医生
        if($money<=0){
        	$payFlag = true;
        	$cidFlag = true;
        }
        if($cidFlag){
        	if($payFlag){
        		//支付金额为零,更改订单已支付状态,不调用第三方支付
        		$state = $result['order_state'] + 1;
        		$updateInfo = [
        			'can_pay'     => "0",
        			'pay_money'   => "0",
        			'order_state' => $state,
        			'coupon_id'   => $cid,
        			'advise_pay_time' => time(),
        			'advise_expire_time' => time() + intval(86400 * StateConfig::LIMIT_INQUIRY),
        		];
        	}else{
        		$updateInfo = [
    			  'can_pay'     =>  $result['can_pay'],
    			  'pay_money'   =>  $result['pay_money'],
    			  'order_state' =>  $result['order_state'],
    			  'coupon_id'   =>  $cid,
                  'advise_pay_time' => time(),
                  'advise_expire_time' => time() + intval(86400 * StateConfig::LIMIT_INQUIRY),
    			];
        	}
            $modules->runAction('userorder/updateinfo',
        			['id' => $result['order_id'], 'info' => $updateInfo]);
        	if($payFlag){
        		//更改优惠卷为已使用
        		$modules->runAction('ordercoupon/updatecouponbycid',
        				['cid' => $cid, 'status' => '2']);
        	    return UResponse::formatData("0", "支付成功", ['pay' => false, 'order_state' => $state, 'order_id' => $result['order_id']]);
        	}
        }
        $payString = Yii::$app->alipay->get($desc, CONF_ENV . $payResult['pay_id'], $money);

        return UResponse::formatData("0", "获取支付参数成功", ['pay' => $payString, 'order_state' => $result['order_state'], 'order_id' => $result['order_id']]);
    }

    /**
     * 创建支付订单
     * @return array
     * @throws \yii\base\InvalidRouteException
     */
    public function actionGetweipayorder()
    {
        $orderId = Yii::$app->getParams->get("order_id");
        if (!$orderId) {
            return UResponse::formatData(UResponse::$code['InvalidArgument'], "提交信息有误");
        }
        $modules = Yii::$app->getModule("patient");
        $result = $modules->runAction('userorder/getInfoById',
            ['id' => $orderId]);
        if (!$result || $result['is_delete'] != StateConfig::$activeFlag['yes']['val']) {
            return UResponse::formatData(UResponse::$code['InvalidArgument'], "提交信息有误");
        }
        if (!$result['can_pay']) {
            return UResponse::formatData(UResponse::$code['InvalidArgument'], "提交信息有误");
        }
        $orderStateConfig = StateConfig::getOrderStatus($result['order_version'])["ordertype" . $result['order_type']];
        $orderStateConfig = isset($orderStateConfig['vip'.$result['vip_type']])?$orderStateConfig['vip'.$result['vip_type']]['type' . $result['order_state']]:$orderStateConfig['type' . $result['order_state']];
        if ($orderStateConfig['expire'] > 0) {
            if ($result['update_time'] + ($orderStateConfig['expire'] * 3600) < time()) {
                return UResponse::formatData(UResponse::$code['Expire'], "该订单已超时，不能支付");
            }
        }
        $money = $result['pay_money'];
        $money = sprintf("%.2f", $money);
        $payFlag = false;
        $cid  = Yii::$app->getParams->get("cid"); //优惠卷编号
        if ($cid){
        	$orderCoupon = $modules->runAction('ordercoupon/getcouponbycid',
        			['cid' => $cid]);
        	if (!$orderCoupon){
        		return UResponse::formatData(UResponse::$code['InvalidArgument'], "优惠卷信息有误");
        	}
        	if($orderCoupon['expiry_time'] < time()){
        		return UResponse::formatData(UResponse::$code['InvalidArgument'], "优惠卷已经过期");
        	}
        	if($orderCoupon['order_type'] >0 && $result['order_type'] != $orderCoupon['order_type']){
        		return UResponse::formatData(UResponse::$code['InvalidArgument'], "优惠卷不适用当前订单");
        	}
            $rule = StateConfig::$coupon_use_rule;
            if(isset($rule[$orderCoupon['use_rule']])){
                $rule  = $rule[$orderCoupon['use_rule']];
                $small = $rule['0']+0;
                if($money<$small){
                    return UResponse::formatData(UResponse::$code['InvalidArgument'], $orderCoupon['rule_desc']);
                }
                $big = $rule['1']+0;
                if($money>$big){
                    return UResponse::formatData(UResponse::$code['InvalidArgument'], $orderCoupon['rule_desc']);
                }
            }
        	$money = $money-$orderCoupon['order_money'];
        	if($money<=0){
        		$money   = sprintf("%.2f",'0');  //不用支付
        		$payFlag = true;
        	}
        }
        $orderStatus = StateConfig::getOrderStatus($result['order_version'])['ordertype' . $result['order_type']];
        $desc = isset($orderStatus['vip'.$result['vip_type']])?$orderStatus['vip'.$result['vip_type']]['type' . $result['order_state']]['out_desc']:$orderStatus['type' . $result['order_state']]['out_desc'];
        if (CONF_ENV != "pro_" && !$payFlag) {
            $money = "0.01";
        }
        if($result['user_id'] == '10000000030013'){
            $money = "0.01";
        }
        $desc = StateConfig::getPayDesc($desc, $result['order_type_desc'], $result['vip_type'], $result['section_name']);

        $payId = Yii::$app->DBID->getID('db.pay_accompany');
        $payOrder = [
            "pay_id"        => $payId,
            "user_id"       => $result['user_id'],
            "order_id"      => substr($result['order_id'], 6),
            "pay_money"     => $result['pay_money'],
            "pay_type"      => 2,
            "pay_status"    => 0,
            "pay_account"   => '',
            "pay_order_id"  => "",
            "order_type"    => $result['order_type'],
            "order_state"   => $result['order_state'],
            "requestParams" => '[]',
            "is_delete"     => 1,
        	"coupon_id"     => $cid?$cid:'0',
        ];

        $payResult = $modules->runAction('pay/create',
            ['info' => $payOrder]);
        if($cid){
        	if($payFlag){
        		//支付金额为零,更改订单未已支付状态,不调用第三方支付
        		$state = $result['order_state'] + 1;
        		$updateInfo = [
        			'can_pay'     => '0',
        			'pay_money'   => '0',
        			'order_state' => $state,
        			'coupon_id'   => $cid,
        			'advise_pay_time' => time(),
        			'advise_expire_time' => time() + intval(86400 * StateConfig::LIMIT_INQUIRY),
        		];
        	}else{
        		$updateInfo = [
    			   'can_pay'     =>  $result['can_pay'],
    			   'pay_money'   =>  $result['pay_money'],
    			   'order_state' =>  $result['order_state'],
    			   'coupon_id'   =>  $cid,
                   'advise_pay_time' => time(),
                   'advise_expire_time' => time() + intval(86400 * StateConfig::LIMIT_INQUIRY),
    			];
        	}
            $modules->runAction('userorder/updateinfo',
        			['id' => $result['order_id'], 'info' => $updateInfo]);
        	if($payFlag){
        		//更改优惠卷为已使用
        		$modules->runAction('ordercoupon/updatecouponbycid',
        				['cid' => $cid, 'status' => '2']);
        		return UResponse::formatData("0", "支付成功", ['pay' => false, 'order_state' => $state, 'order_id' => $result['order_id']]);
     		}
        }
        $payString = Yii::$app->weipay->getPrePay($desc, CONF_ENV . $payResult['pay_id'], $money);
        if (!$payString) {
            return UResponse::formatData(UResponse::$code['Expire'], "支付失败，请稍后重试");
        }
        return UResponse::formatData("0", "获取支付参数成功", ['pay' => $payString, 'order_state' =>$result['order_state'], 'order_id' => $result['order_id']]);
    }

    /**
     * 获取订单是否支付
     * @return array
     * @throws \yii\base\InvalidRouteException
     */
    public function actionGetorderstatus()
    {

        $orderId = Yii::$app->getParams->get("order_id");
        $orderState = Yii::$app->getParams->get("order_state");
        $modules = Yii::$app->getModule('patient');
        $result = $modules->runAction('userorder/getInfoById',
            ['id' => $orderId]);
        if ($result['order_state'] != $orderState) {
            return UResponse::formatData(UResponse::$code['InvalidArgument'], "订单未支付", (object)[]);
        }

        return UResponse::formatData("0", "订单未支付", (object)[]);

    }

    /**
     * 支付宝回调地址
     * @return string
     * @throws \yii\base\InvalidRouteException
     */
    public function actionAlipay()
    {

        Yii::$app->response->format = Response::FORMAT_HTML;
        $rData = Yii::$app->request->post();
        if (CONF_ENV == '') {
            $rData = '{"total_amount":"0.01","buyer_id":"2088402696705212","trade_no":"2016122321001004210294558837","body":"\u624b\u672f\u8d39\u7528","notify_time":"2016-12-23 16:36:52","subject":"\u624b\u672f\u8d39\u7528","sign_type":"RSA","buyer_logon_id":"182***@163.com","auth_app_id":"2016110402530013","charset":"utf-8","notify_type":"trade_status_sync","invoice_amount":"0.01","out_trade_no":"410000000020083m1482481581","trade_status":"TRADE_SUCCESS","gmt_payment":"2016-12-23 16:26:43","version":"1.0","point_amount":"0.00","sign":"wislhcQ02hIEyZlFJCW2tp3vSinbs4lXw6iCM+pxsdDwxyT2AOmaeMEBaiD48k3jt9wNQbJwJ8mSTLmI6rGXNHrSe+ROyGS1bicPk0XbqEL4gQ3rWbStiGZ5cjtso8qF4jMxIsWSAMF127nKRdoDALqz29Dd39ovpYkSmdkmeHI=","gmt_create":"2016-12-23 16:26:42","buyer_pay_amount":"0.01","receipt_amount":"0.01","fund_bill_list":"[{\"amount\":\"0.01\",\"fundChannel\":\"ALIPAYACCOUNT\"}]","app_id":"2016110402530013","seller_id":"2088521157569805","notify_id":"c907bb0ed25aad51a79d1e5ad89240bhme","seller_email":"info@huobanys.com"}';
            $rData = json_decode($rData, true);
            $rData['out_trade_no'] = '10110110000000000012';
        }
        file_put_contents("/tmp/luoning.log", json_encode($rData) . PHP_EOL, FILE_APPEND);
        //$rData = '{"total_amount":"0.01","buyer_id":"2088202563010955","trade_no":"2016113021001004950297160522","body":"\u8d44\u8baf\u8d39\u7528","notify_time":"2016-11-30 19:45:16","subject":"1","sign_type":"RSA","buyer_logon_id":"hua***@hotmail.com","auth_app_id":"2016110402530013","charset":"utf-8","notify_type":"trade_status_sync","invoice_amount":"0.01","out_trade_no":"110000000010135m1480505873","trade_status":"TRADE_SUCCESS","gmt_payment":"2016-11-30 19:39:46","version":"1.0","point_amount":"0.00","sign":"a1ts+tTrb05cJK7inu7+V6EMpPedPUieH9xfbKphrsOvhp8OTDAbwsYfBQfK0tZ7yFiio3LZ8V9CO1Z3wqK6R05J7vSByei6hPhD53sgGy23n2QBc87iZ9nkom13\/DqoFPCMHkvny4UO66lj9Y2eZfhd+HZIorP6Dk+Cj4iZgWA=","gmt_create":"2016-11-30 19:39:45","buyer_pay_amount":"0.01","receipt_amount":"0.01","fund_bill_list":"[{\"amount\":\"0.01\",\"fundChannel\":\"ALIPAYACCOUNT\"}]","app_id":"2016110402530013","seller_id":"2088521157569805","notify_id":"484dcb010e46bf38571e2047d505e96nby","seller_email":"info@huobanys.com"}';
        //$rData = json_decode($rData, true);
        if (!(Yii::$app->alipay->checkIsAlipay($rData)) && CONF_ENV != '') {
            return "该死哪死哪去";
        }
        if ($rData['trade_status'] == 'WAIT_BUYER_PAY') {
            return "success";
        }
        $redis = Yii::$app->redis;
        $redisKey = AppRedisKeyMap::getAlipayKey($rData['out_trade_no']);
        //避免重复请求
        if ($redis->incr($redisKey) > 1 && CONF_ENV != '') {
            return 'success';
        }
        //一小时过期时间
        $redis->expire($redisKey, 3600);
        list($tmp,$rData['out_trade_no']) = explode("_", $rData['out_trade_no']);

        $modules = Yii::$app->getModule("patient");
        $payResult = $modules->runAction('pay/getInfoById',
            ['id' => $rData['out_trade_no']]);
        if ($payResult['pay_status'] == 2) {
            return "success";
        }
        $payUpdateInfo = [
            'requestParams' => json_encode($rData, JSON_UNESCAPED_UNICODE),
        ];

        //支付成功
        if ($rData['trade_status'] == 'TRADE_SUCCESS') {

            $payUpdateInfo['pay_account'] = $rData['buyer_id'];
            $payUpdateInfo['pay_order_id'] = $rData['trade_no'];

            $idPrefix = 100 + $payResult['order_type'];
            //list.ordertype.
            $orderId = StateConfig::$orderType['type' . $payResult['order_type']]['list'] . $idPrefix . $payResult['order_id'];

            $result = $modules->runAction('userorder/getInfoById',
                ['id' => $orderId]);

            //todo 特殊情况处理
            $result['order_state'] = OrderOutput::$lastStatus;

            if (!$result || $result['is_delete'] != StateConfig::$activeFlag['yes']['val']) {
                return "success";
            }

            //支付成功的订单短信通知
            Yii::$app->queue->send([
            	'info' => ['order_id' =>$result['order_id'],'order_phone'=>$result['order_phone'],
            				'order_name'=>$result['order_name'],'order_state'=>$result['order_state'],
            				'order_type'=>$result['order_type'],'order_update_time'=>$result['order_update_time'], 'order_version' => $result['order_version']]
            ],RabbitConfig::ORDER_SMS_FROM_PAY);
            
            $state = $result['order_state'] + 1;
            $orderStatus = StateConfig::getOrderStatus($result['order_version'])['ordertype' . $result['order_type']];
            $order_state = isset($orderStatus['vip'.$result['vip_type']]['type' . $state]['val'])?$orderStatus['vip'.$result['vip_type']]['type' . $state]['val']:$orderStatus['type' . $state]['val'];
            OrderJson::setValue(OrderJson::ORDER_STATE_RECORD, OrderInput::formatProcessRecord($result['user_id'], "", $result['pay_money'], $order_state));
            $info = [
                'order_state' => $order_state,
                'update_time' => time(),
                'can_pay'     => 0,
                'pay_money'   => 0,
            ];
            $modules = Yii::$app->getModule('patient');
            $modules->runAction('userorder/updateinfo',
                ['id' => $orderId, 'info' => $info]);
            $payUpdateInfo['pay_status'] = 2;
            file_put_contents("/tmp/luoning.log", 'success' . PHP_EOL, FILE_APPEND);
        } else {
            $payUpdateInfo['pay_status'] = 1;
        }
        $modules->runAction('pay/updateinfo',
            ['id' => $rData['out_trade_no'], 'info' => $payUpdateInfo]);
         //支付成功修改优惠卷为已使用
        if (isset($result['coupon_id']) && $result['coupon_id'] && $payUpdateInfo['pay_status']==2){
        	$modules->runAction('ordercoupon/updatecouponbycid',
        			['cid' => $result['coupon_id'], 'status' => '2']);
        }
        //支付成功后医生超时未回复退款
        Yii::$app->queue->send([ 'info' => ['order_id' => $result['order_id']]
        ], RabbitConfig::SYSTEM_REFUND_ORDER, 86400 * StateConfig::LIMIT_INQUIRY);
        return 'success';
    }

    /**
     * 微信回调地址
     */
    public function actionWeipay()
    {

        if (CONF_ENV == '') {
            $GLOBALS['HTTP_RAW_POST_DATA'] = '<xml><appid><![CDATA[wx4351c8739d86940d]]></appid>
<bank_type><![CDATA[GDB_CREDIT]]></bank_type>
<cash_fee><![CDATA[1]]></cash_fee>
<fee_type><![CDATA[CNY]]></fee_type>
<is_subscribe><![CDATA[N]]></is_subscribe>
<mch_id><![CDATA[1418513502]]></mch_id>
<nonce_str><![CDATA[40lugvdolssdy4q4wl65swtxps6s3wkv]]></nonce_str>
<openid><![CDATA[oIoeYw_MIMgtkmC1KF3XGkTVwcko]]></openid>
<out_trade_no><![CDATA[10110110000000000013]]></out_trade_no>
<result_code><![CDATA[SUCCESS]]></result_code>
<return_code><![CDATA[SUCCESS]]></return_code>
<sign><![CDATA[38F3E634BDF8CB0C6D3D200AC571BB79]]></sign>
<time_end><![CDATA[20161219165905]]></time_end>
<total_fee>1</total_fee>
<trade_type><![CDATA[APP]]></trade_type>
<transaction_id><![CDATA[4005842001201612193293234015]]></transaction_id>
</xml>';
        }
        file_put_contents('/tmp/lsresponse.log', $GLOBALS['HTTP_RAW_POST_DATA'] . PHP_EOL, FILE_APPEND);
        if (!isset($GLOBALS['HTTP_RAW_POST_DATA'])) {
            return UResponse::formatData(UResponse::$code['InvalidArgument'], "提交信息有误");
        }
        //文件列表设备
        Yii::$app->response->format = Response::FORMAT_HTML;
        $data = [];
        $data['return_code'] = 'SUCCESS';
        $data['return_msg'] = 'OK';
        if (!isset($GLOBALS['HTTP_RAW_POST_DATA']) || !strlen($GLOBALS['HTTP_RAW_POST_DATA'])) {
            return UResponse::data_to_xml($data);
        }
        //解析数据列表
        $rData = UResponse::xml_to_data($GLOBALS['HTTP_RAW_POST_DATA']);
        if (!$rData || !isset($rData['return_code']) || $rData['return_code'] != 'SUCCESS') {
            return UResponse::data_to_xml($data);
        }

        $redis = Yii::$app->redis;
        $redisKey = AppRedisKeyMap::getWeipayKey($rData['out_trade_no']);
        //避免重复请求
        if ($redis->incr($redisKey) > 1) {
            return UResponse::data_to_xml($data);
        }
        //一小时过期时间
        $redis->expire($redisKey, 3600);
        list($tmp,$rData['out_trade_no']) = explode("_", $rData['out_trade_no']);
        //获取支付信息
        $modules = Yii::$app->getModule("patient");
        $payResult = $modules->runAction('pay/getInfoById',
            ['id' => $rData['out_trade_no']]);

        if ($payResult['pay_status'] == 2) {
            return UResponse::data_to_xml($data);
        }
        $payUpdateInfo = [
            'requestParams' => json_encode($rData, JSON_UNESCAPED_UNICODE),
        ];
        //支付成功
        if ($rData['result_code'] == 'SUCCESS') {

            $payUpdateInfo['pay_status'] = 2;
            $payUpdateInfo['pay_account'] = $rData['openid'];
            $payUpdateInfo['pay_order_id'] = $rData['transaction_id'];

            $idPrefix = 100 + $payResult['order_type'];
            //list.ordertype.
            $orderId = StateConfig::$orderType['type' . $payResult['order_type']]['list'] . $idPrefix . $payResult['order_id'];
            $result = $modules->runAction('userorder/getInfoById',
                ['id' => $orderId]);

            //todo 特殊情况处理
            $result['order_state'] = OrderOutput::$lastStatus;

            if (!$result || $result['is_delete'] != StateConfig::$activeFlag['yes']['val']) {

                return UResponse::data_to_xml($data);
            }

            //支付成功的订单短信通知
            Yii::$app->queue->send([
            	'info' => ['order_id' =>$result['order_id'],'order_phone'=>$result['order_phone'],
            			'order_name'=>$result['order_name'],'order_state'=>$result['order_state'],
            		    'order_type'=>$result['order_type'],'order_update_time'=>$result['order_update_time'], 'order_version' => $result['order_version']]
            ], RabbitConfig::ORDER_SMS_FROM_PAY);

            $state = $result['order_state'] + 1;
            OrderJson::setValue(OrderJson::ORDER_STATE_RECORD, OrderInput::formatProcessRecord($result['user_id'], "", $result['pay_money'], $state));
            $orderStatus = StateConfig::getOrderStatus($result['order_version'])['ordertype' . $result['order_type']];
            $order_state = isset($orderStatus['vip'.$result['vip_type']]['type' . $state]['val'])?$orderStatus['vip'.$result['vip_type']]['type' . $state]['val']:$orderStatus['type' . $state]['val'];
            $info = [
                'order_state' => $order_state,
                'update_time' => time(),
                'can_pay'     => 0,
                'pay_money'   => 0, //单位分
            ];
            $modules = Yii::$app->getModule('patient');
            $modules->runAction('userorder/updateinfo',
                ['id' => $orderId, 'info' => $info]);
            file_put_contents("/tmp/luoning.log", 'success' . PHP_EOL, FILE_APPEND);
        } else {
            $payUpdateInfo['pay_status'] = 1;
        }

        $modules->runAction('pay/updateinfo',
            ['id' => $rData['out_trade_no'], 'info' => $payUpdateInfo]);
        //支付成功修改优惠卷为已使用
        if (isset($result['coupon_id']) && $result['coupon_id'] && $payUpdateInfo['pay_status'] == 2){
        	$modules->runAction('ordercoupon/updatecouponbycid',
        			['cid' => $result['coupon_id'], 'status' => '2']);
        }
        //支付成功后医生超时未回复退款
        Yii::$app->queue->send([ 'info' => ['order_id' => $result['order_id']]
        ], RabbitConfig::SYSTEM_REFUND_ORDER, 86400 * StateConfig::LIMIT_INQUIRY);
        return UResponse::data_to_xml($data);
    }
    
    
    /**
     * 创建支付订单
     * @return array
     * @throws \yii\base\InvalidRouteException
     */
    public function actionGetunionorder()
    {
    	$orderId = Yii::$app->getParams->get("order_id");
    	if (!$orderId) {
    		return UResponse::formatData(UResponse::$code['InvalidArgument'], "提交信息有误");
    	}
    	$modules = Yii::$app->getModule("patient");
    	$result = $modules->runAction('userorder/getInfoById',
    			['id' => $orderId]);
    	if (!$result || $result['is_delete'] != StateConfig::$activeFlag['yes']['val']) {
    		return UResponse::formatData(UResponse::$code['InvalidArgument'], "提交信息有误");
    	}
    	if (!$result['can_pay']) {
    		return UResponse::formatData(UResponse::$code['InvalidArgument'], "提交信息有误");
    	}
        $orderStateConfig = StateConfig::getOrderStatus($result['order_version'])["ordertype" . $result['order_type']];
        $orderStateConfig = isset($orderStateConfig['vip'.$result['vip_type']])?$orderStateConfig['vip'.$result['vip_type']]['type' . $result['order_state']]:$orderStateConfig['type' . $result['order_state']];
        if ($orderStateConfig['expire'] > 0) {
    		if ($result['update_time'] + ($orderStateConfig['expire'] * 3600) < time()) {
    			return UResponse::formatData(UResponse::$code['Expire'], "该订单已超时，不能支付");
    		}
    	}
    	$money  = $result['pay_money'];
    	$money *= 100;
        $payFlag = false;
        $cid  = Yii::$app->getParams->get("cid"); //优惠卷编号
        if ($cid){
        	$orderCoupon = $modules->runAction('ordercoupon/getcouponbycid',
            ['cid' => $cid]);
        	if (!$orderCoupon){
        		return UResponse::formatData(UResponse::$code['InvalidArgument'], "优惠卷信息有误");
        	}
        	if($orderCoupon['expiry_time'] < time()){
        		return UResponse::formatData(UResponse::$code['InvalidArgument'], "优惠卷已经过期");
        	}
        	if($orderCoupon['order_type'] >0 && $result['order_type'] != $orderCoupon['order_type']){
        		return UResponse::formatData(UResponse::$code['InvalidArgument'], "优惠卷不适用当前订单");
        	}
            $rule = StateConfig::$coupon_use_rule;
            if(isset($rule[$orderCoupon['use_rule']])){
                $rule  = $rule[$orderCoupon['use_rule']];
                $small = $rule['0']+0;
                if($money<$small){
                    return UResponse::formatData(UResponse::$code['InvalidArgument'], $orderCoupon['rule_desc']);
                }
                $big = $rule['1']+0;
                if($money>$big){
                    return UResponse::formatData(UResponse::$code['InvalidArgument'], $orderCoupon['rule_desc']);
                }
            }
        	$money = $money-$orderCoupon['order_money'];
        	if($money<=0){
        	    $money =  '0';  //不用支付
        	    $payFlag = true;
        	}
        }
        $orderStatus = StateConfig::getOrderStatus($result['order_version'])['ordertype' . $result['order_type']];
        $desc = isset($orderStatus['vip'.$result['vip_type']])?$orderStatus['vip'.$result['vip_type']]['type' . $result['order_state']]['out_desc']:$orderStatus['type' . $result['order_state']]['out_desc'];
        if (CONF_ENV != "pro_" && !$payFlag) {
    		$money = "1";
    	}
        $desc = StateConfig::getPayDesc($desc, $result['order_type_desc'], $result['vip_type'], $result['section_name']);

        $payId = Yii::$app->DBID->getID('db.pay_accompany');
    	$payOrder = [
    			"pay_id"        => $payId,
    			"user_id"       => $result['user_id'],
    			"order_id"      => substr($result['order_id'], 6),
    			"pay_money"     => $result['pay_money'],
    			"pay_type"      => 3,
    			"pay_status"    => 0,
    			"pay_account"   => '',
    			"pay_order_id"  => "",
    			"order_type"    => $result['order_type'],
    			"order_state"   => $result['order_state'],
    			"requestParams" => '[]',
    			"is_delete"     => 1,
    			"coupon_id"     => $cid?$cid:'0',
    	];
    	$payResult = $modules->runAction('pay/create',
    			['info' => $payOrder]);
    	if($cid){
    		if($payFlag){
    			//支付金额为零,更改订单未已支付状态,不调用第三方支付
    			$state = $result['order_state'] + 1;
    			$updateInfo = [
    				'can_pay'     => "0",
    				'pay_money'   => "0",
    				'order_state' => $state,
    				'coupon_id'   => $cid,
    				'advise_pay_time' => time(),
    				'advise_expire_time' => time() + intval(86400 * StateConfig::LIMIT_INQUIRY),
    			];
    		}else{
    			$updateInfo = [
    			  'can_pay'     =>  $result['can_pay'],
    			  'pay_money'   =>  $result['pay_money'],
    			  'order_state' =>  $result['order_state'],
    			  'coupon_id'   =>  $cid,
                  'advise_pay_time' => time(),
                  'advise_expire_time' => time() + intval(86400 * StateConfig::LIMIT_INQUIRY),
    			];
    		}
            $modules->runAction('userorder/updateinfo',
    				['id' => $result['order_id'], 'info' => $updateInfo]);
    		if($payFlag){
    			//更改优惠卷为已使用
    			$modules->runAction('ordercoupon/updatecouponbycid',
    					['cid' => $cid, 'status' => '2']);
    			return UResponse::formatData("0", "支付成功", ['pay' => false, 'order_state' =>$state, 'order_id' => $result['order_id'],'tn'=>false]);
    		}
    	}
    	$payTn = Yii::$app->unionPay->getTn($payResult['pay_id'], $money);
        if(isset($payTn['tn'])){
        	$payTn = $payTn['tn'];
        }else{
        	return UResponse::formatData(UResponse::$code['InvalidArgument'], "支付参数错误");
        }
    	return UResponse::formatData("0", "获取支付参数成功", ['pay' => $payTn, 'order_state' => $result['order_state'], 'order_id' => $result['order_id'],'tn'=>$payTn]);
    }
    
    //银联支付回调
    public function actionUnionpay(){
    	Yii::$app->response->format = Response::FORMAT_HTML;
    	$rData   = Yii::$app->request->post();
    	$unionPay = Yii::$app->unionPay;
    	if (CONF_ENV == '') {
    		$rData = '{
				"accessType":"0",
				"bizType":"000201",
				"certId":"69597475696",
				"currencyCode":"156",
				"encoding":"utf-8",
				"merId":"898111980110147",
				"orderId":"20170209152703",
				"queryId":"201702091527037941308",
				"respCode":"00",
				"respMsg":"success",
				"settleAmt":"1",
				"settleCurrencyCode":"156",
				"settleDate":"0209",
				"signMethod":"01",
				"signature":"Qm7h8t2y9K6r17js1fOxTsbSsgcCyQ3HQvJXF4aBd0AOXSyJ\/WjJdpWi18JMmBRbKX2yy0phZS5dR40d6tm1aJ6KU8szI27vvNYG7ZvhrHi86EPco1XZ5Y2nr59cPjYXYBuiOLPlTDzgqWAJyyrH7M7BOcpK1Vvf1FRC51fk39MVTMjKczmd8OB2amMZboDO\/rtYegHLYYOsUh\/JZNPjwVhVCDZkOO66FGEpGTe4Ece7poQ6zAAace33wC3K4w\/17jboHQ\/7pgRQHTKY2NeS+2c62\/G49iYlhfcukejec89mWsqFohT2yUO14Hd8mkHreSXrifZ8Ss+oKuexRZQM5Q==",
				"traceNo":"794130",
				"traceTime":"0209152703",
				"txnAmt":"1",
				"txnSubType":"01",
				"txnTime":"20170209152703",
				"txnType":"01",
				"version":"5.0.0"
		     }';
    		$rData = json_decode($rData, true);
    		$rData['orderId'] = '10110110000000000012';
    	}
    	file_put_contents("/tmp/union.log", json_encode($rData). PHP_EOL, FILE_APPEND);
    	if(!isset( $rData['signature'])){
    		file_put_contents("/tmp/union.log", 'signature fail!'. PHP_EOL, FILE_APPEND);
    	}
    	if(!$unionPay->validate( $rData )){
    		file_put_contents("/tmp/union.log", 'validate fail!'. PHP_EOL, FILE_APPEND);
    	}
    	if(!isset($rData['respCode'])){
    		file_put_contents("/tmp/union.log", 'respCode not exist!'. PHP_EOL, FILE_APPEND);
    	}elseif(!$rData['respCode']=="00" || !$rData['respCode']=="A6"){
    		//判断respCode=00或A6即可认为交易成功
    		file_put_contents("/tmp/union.log", 'respCode fail!'. PHP_EOL, FILE_APPEND);
    	}
    	$redis = Yii::$app->redis;
    	$redisKey = AppRedisKeyMap::getAlipayKey($rData['orderId']);
    	//避免重复请求
    	if ($redis->incr($redisKey) > 1 && CONF_ENV != '') {
    		return true;
    	}
    	//一小时过期时间
    	$redis->expire($redisKey, 3600);
    	$modules = Yii::$app->getModule("patient");
    	$payResult = $modules->runAction('pay/getInfoById',
    			['id' => $rData['orderId']]);
    	file_put_contents("/tmp/union.log", 'payResult:'.json_encode($payResult,256). PHP_EOL, FILE_APPEND);
    	if ($payResult['pay_status'] == 2) {
    		file_put_contents("/tmp/union.log", 'pay_status:'.$payResult['pay_status']. PHP_EOL, FILE_APPEND);
    		return true;
    	}
    	$payUpdateInfo = [
    		'requestParams' => json_encode($rData, JSON_UNESCAPED_UNICODE),
    	];
    	//支付成功
    	if ($rData["respCode"] == "00") {
    	
    		$payUpdateInfo['pay_account']  = $rData['queryId'];
    		$payUpdateInfo['pay_order_id'] = $rData['orderId'];
    	
    		$idPrefix = 100 + $payResult['order_type'];
    		//list.ordertype.
    		$orderId = StateConfig::$orderType['type' . $payResult['order_type']]['list'] . $idPrefix . $payResult['order_id'];
    	
    		$result = $modules->runAction('userorder/getInfoById',['id' => $orderId]);
    		file_put_contents("/tmp/union.log", 'result:'.json_encode($result,256). PHP_EOL, FILE_APPEND);
    		//todo 特殊情况处理
    		$result['order_state'] = OrderOutput::$lastStatus;
    	
    		if (!$result || $result['is_delete'] != StateConfig::$activeFlag['yes']['val']) {
    			return true;
    		}
    		//支付成功的订单短信通知
    		Yii::$app->queue->send([
    				'info' => ['order_id' =>$result['order_id'],'order_phone'=>$result['order_phone'],
    						'order_name'=>$result['order_name'],'order_state'=>$result['order_state'],
    						'order_type'=>$result['order_type'],'order_update_time'=>$result['order_update_time'], 'order_version' => $result['order_version']]
    		],RabbitConfig::ORDER_SMS_FROM_PAY);
    	
    		$state = $result['order_state'] + 1;
            $orderStatus = StateConfig::getOrderStatus($result['order_version'])['ordertype' . $result['order_type']];
            $order_state = isset($orderStatus['vip'.$result['vip_type']]['type' . $state]['val'])?$orderStatus['vip'.$result['vip_type']]['type' . $state]['val']:$orderStatus['type' . $state]['val'];
            OrderJson::setValue(OrderJson::ORDER_STATE_RECORD, OrderInput::formatProcessRecord($result['user_id'], "", $result['pay_money'], $order_state));
    		$info = [
    				'order_state' => $order_state,
    				'update_time' => time(),
    				'can_pay'     => 0,
    				'pay_money'   => 0,
    		];
    		$modules = Yii::$app->getModule('patient');
    		$modules->runAction('userorder/updateinfo',
    				['id' => $orderId, 'info' => $info]);
    		$payUpdateInfo['pay_status'] = 2;
    		file_put_contents("/tmp/union.log", 'success' . PHP_EOL, FILE_APPEND);
    	} else {
    		$payUpdateInfo['pay_status'] = 1;
    	}
    	$modules->runAction('pay/updateinfo',
    			['id' => $rData['orderId'], 'info' => $payUpdateInfo]);
    	//支付成功修改优惠卷为已使用
    	if (isset($result['coupon_id']) && $result['coupon_id'] && $payUpdateInfo['pay_status'] == 2){
    		$modules->runAction('ordercoupon/updatecouponbycid',
    		 ['cid' => $result['coupon_id'], 'status' => '2']);
    	}
        //支付成功后医生超时未回复退款
        Yii::$app->queue->send([ 'info' => ['order_id' => $result['order_id']]
        ], RabbitConfig::SYSTEM_REFUND_ORDER, 86400 * StateConfig::LIMIT_INQUIRY);
    	return true;
    }
    
}
