<?php

namespace app\modules\service\controllers;

use app\common\application\RabbitConfig;
use app\common\application\StateConfig;
use app\common\components\AppRedisKeyMap;
use app\modules\patient\behavior\OrderJson;
use app\modules\patient\data\OrderInput;
use app\modules\patient\data\OrderOutput;
use app\modules\patient\data\OrderPrice;
use Yii;
use app\common\data\Encrypt;
use app\common\data\Response as UResponse;
use yii\log\Logger;
use yii\base\Exception;
use yii\web\Response;
use yii\web\UploadedFile;

class ProcessController extends \yii\web\Controller
{

    public $enableCsrfValidation = false;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        Yii::$app->runData->set("isCardToOrder", 0);
    }

    public function behaviors()
    {
        return [
            [
                'class' => 'app\common\filters\PatientFilter',
                'only'  => [
                    'orderoperation',
                    'inquiry',
                    'getinquiry',
                    'getinquirylist',
                    'cancelinquiry',
                    'getorderlist',
                    'getorder',
                    'handleorder',
                    'cancelorder',
                    'buygoods',
                    'getgoodorder',
                    'getstaticdata',
                    'usercommitorder',
                    'modifyorderimage',
                	'getusercoupon',
                	'orderoperationagain'
                ],
            ],
        ];
    }


    public function actionBuygoods()
    {
        try {
            $goodId = Yii::$app->getParams->get("good_id");
            $addressId = Yii::$app->getParams->get("address_id");
            $isInvoice = intval(Yii::$app->getParams->get("is_invoice"));
            $buyNumber = intval(Yii::$app->getParams->get("buy_number"));
            $invoiceType = intval(Yii::$app->getParams->get('invoice_type'));
            $invoiceTitle = Yii::$app->getParams->get('invoice_title');
            $invoiceContent = Yii::$app->getParams->get('invoice_content');
            $taxpayer_ident_no = Yii::$app->getParams->get('taxpayer_ident_no');

            $modules = Yii::$app->getModule("patient");
            $goodsDetail = $modules->runAction("goodsinfo/getdetailorder", ['id' => $goodId]);
            if(!$goodsDetail){
                return UResponse::formatData(UResponse::$code['AccessDeny'], "商品信息不存在");
            }
            $goodsMap = [
                'goods_id',
                'goods_name',
                'goods_type',
                'goods_big_image',
                'goods_small_image',
                'goods_image',
                'goods_amount',
                'goods_onsalt_time',
                'is_onsalt',
                'goods_service',
                'goods_service_limit',
                'goods_expire_time',
                'goods_url',
                'detail_url',
                'now_price',
                'freight_price',
            ];
            foreach ($goodsMap as $k => $v) {
                $detailInfo[$v] = $goodsDetail[$v];
            }
            if(!$detailInfo["goods_type"]){
                $detailInfo["goods_type"] = '1';
            }
            $goodsType  = isset(StateConfig::$goodsType[$detailInfo["goods_type"]])?StateConfig::$goodsType[$detailInfo["goods_type"]]:StateConfig::$goodsType['1'];
            $order_type = $goodsType['type'];
            $userInfo = Yii::$app->runData->get("userInfo");
            $order_id = Yii::$app->DBID->getOrderId($userInfo['user_id'], $order_type);
            $detailInfoTmp = [
                'order_id'        => $order_id,
                'address_id'      => $addressId,
                'is_invoice'      => $isInvoice,
                'invoice_type'    => $invoiceType,
                'invoice_title'   => $invoiceTitle,
                'invoice_content' => $invoiceContent,
                'buy_number'      => $buyNumber,
            ];
            $detailInfo = array_merge($detailInfo,$detailInfoTmp);
            //收集数据存储预约
            $orderStateInfo = isset(StateConfig::getOrderStatus(StateConfig::$nowOrderVersion)['ordertype'.$order_type])
                ? StateConfig::getOrderStatus(StateConfig::$nowOrderVersion)['ordertype'.$order_type]
                : StateConfig::getOrderStatus(StateConfig::$nowOrderVersion)['ordertype0'];
            $orderInfo = [
                "order_id"        => $order_id,
                "order_type"      => $order_type,
                "order_name"      => "",
                "order_number"    => $order_id,
                "order_gender"    => 1,
                "order_phone"     => $userInfo['user_mobile'],
                "order_city"      => "",
                "order_city_name" => "",
                "order_state"     => $orderStateInfo['type1']['val'],
                "order_design"    => '无',
                "order_time"      => date("Y-m-d H:i:s"),
                "disease_name"    => "",
                "disease_des"     => "",
                "user_id"         => $userInfo["user_id"],
                "order_age"       => 10,
                "taxpayer_ident_no"=>$taxpayer_ident_no,
            ];
            $orderInfo['doctor_id'] = "0";
            $orderInfo['doctor_name'] = "";
            $orderInfo['hospital_id'] = "";
            $orderInfo['hospital_name'] = "";
            $orderInfo['hospital_section_id'] = "";
            $orderInfo['section_id'] = "";
            $orderInfo['section_name'] = "";
            $orderInfo['id_card'] = "";
            $orderInfo["vip_type"] = "1";
            $orderInfo['order_date'] = "";
            $orderInfo['order_file'] = [];

            $addressMap = [
                'user_name',
                'user_district_id',
                'user_district_address',
                'user_detail_address',
                'user_phone',
                'user_id',
            ];
            $modules = Yii::$app->getModule('patient');
            $addressInfo = $modules->runAction('expressaddress/getbyid',
                ['id' => $addressId]);
            foreach ($addressMap as $k => $v) {
                $detailInfo[$v] = $addressInfo[$v];
            }
            OrderOutput::setProductInfo($order_id, $detailInfo);
            OrderPrice::setProductInfo($detailInfo);
            $result = $modules->runAction('userorder/createOrder',
                ['info' => $orderInfo]);
            if (!$result) {
                return UResponse::formatData("0", "预约失败", (object)['list' => []]);
            }
            $detailResult = $modules->runAction($goodsType['class'],
                ['info' => $detailInfo]);
            return UResponse::formatData("0", "预约成功", (object)['order' => $result, 'good' => UResponse::messageToString($detailResult)]);
        } catch (Exception $e) {
            Yii::getLogger()->log($e->getMessage(), Logger::LEVEL_ERROR);
            return UResponse::formatData("0", "预约失败", (object)[]);
        }
    }

    /**
     * 手术预约接口
     */
    /*
    order_type	true	int	1=手术预约，2=精准预约，3=海外医疗
    order_name	true	int	就诊人姓名，type=2时必填
    order_gender	false	int	就诊人性别，type=2时必填
    order_phone	false	varchar	就诊人号码，type=2时必填
    order_age	false	int	就诊人年龄，type=2时必填
    order_city	false	int	城市编码，type=2时必填
    order_date	false	date	期望就诊时间，type=2时必填
    disease_name	false	verchar	疾病名称，未确诊可不填
    disease_des	true	varchar	疾病描述
    disease_photos	false	object	疾病相关照片
     */
    public function actionOrderoperation()
    {
        try {
            $order_type = Yii::$app->getParams->get("order_type");
            $order_name = Yii::$app->getParams->get("order_name");
            $order_gender = Yii::$app->getParams->get("order_gender");
            $order_phone = Yii::$app->getParams->get("order_phone");
            $order_age = Yii::$app->getParams->get("order_age");
            $order_city = Yii::$app->getParams->get("order_city");
            $order_date = Yii::$app->getParams->get("order_date");
            $disease_name = Yii::$app->getParams->get("disease_name");
            $disease_des = Yii::$app->getParams->get("disease_des");
            $disease_photos = Yii::$app->getParams->get("disease_photos");
            $doctor_id = Yii::$app->getParams->get("doctor_id");
            $doctor_name = Yii::$app->getParams->get("doctor_name");
            $vip_type = Yii::$app->getParams->get("vip_type");
            $hospital_section_id = Yii::$app->getParams->get("hospital_section_id");
            $section_name = Yii::$app->getParams->get("section_name");
            $hospital_name = Yii::$app->getParams->get("hospital_name");
            $hospital_id = Yii::$app->getParams->get("hospital_id");
            $id_card = Yii::$app->getParams->get("id_card");
            $check_organization = Yii::$app->getParams->get("check_organization");
            $report_check_time = Yii::$app->getParams->get("report_check_time");
            $medical_card = Yii::$app->getParams->get("medical_card");
            $doctor_position = Yii::$app->getParams->get("doctor_position");
            $userInfo = Yii::$app->runData->get("userInfo");
            //精准预约
            if ($order_type == "2") {
                if (!$order_name && !$order_gender && !$order_phone && !$order_age && !$order_city && !$order_date) {
                    return UResponse::formatData(UResponse::$code['AccessDeny'], "必填项不能为空");
                }
            }
            //vip预约
            if ($order_type == "12" && !array_key_exists("type" . $vip_type, StateConfig::$priceInfo['ordertype12'])) {
                return UResponse::formatData(UResponse::$code['AccessDeny'], "必填项不能为空");
            }
            if ($order_type == "20") {
                if(!$vip_type){
                    return UResponse::formatData(UResponse::$code['AccessDeny'], "vip类型不能为空");
                }
                if($vip_type=='1'&& !in_array($doctor_position,['6','99','10'])){
                    return UResponse::formatData(UResponse::$code['AccessDeny'], "医生职称错误!");
                }
            }
            if (!$vip_type) {
                $vip_type = '0';
            }
            //todo 以后再说
            //vip套餐4特殊处理
            /*
            if ($vip_type == "4") {
                $order_type = '14';
            }
            */

            $order_id = Yii::$app->DBID->getOrderId($userInfo['user_id'], $order_type);
            $order_number = Encrypt::getOrderPrefix($order_type) . $order_id;

            $modules = Yii::$app->getModule('doctor');
            $cityInfo = $modules->runAction('district/getInfoById', ['id' => $order_city]);
            //收集数据存储预约
            $orderStateInfo = isset(StateConfig::getOrderStatus(StateConfig::$nowOrderVersion)['ordertype' . $order_type])
                ? StateConfig::getOrderStatus(StateConfig::$nowOrderVersion)['ordertype' . $order_type]
                : StateConfig::getOrderStatus(StateConfig::$nowOrderVersion)['ordertype0'];
            if(isset($orderStateInfo['vip'.$vip_type])){
                $orderStateInfo = $orderStateInfo['vip'.$vip_type];
            }
            $user = [
                "order_id"        => $order_id,
                "order_type"      => $order_type,
                "order_name"      => $order_name ? : $userInfo['user_name'],
                "order_number"    => $order_number,
                "order_gender"    => $order_gender,
                "order_phone"     => $order_phone ? : $userInfo['user_mobile'],
                "order_city"      => $order_city,
                "order_city_name" => isset($cityInfo['district_name']) ? $cityInfo['district_name'] : "",
                "order_state"     => $orderStateInfo['type1']['val'],
                "order_design"    => '无',
                "order_time"      => date("Y-m-d H:i:s"),
                "disease_name"    => $disease_name,
                "disease_des"     => $disease_des,
                "user_id"         => $userInfo["user_id"],
                "order_age"       => $order_age,
                "report_check_time" => $report_check_time,
                "check_organization" => $check_organization,
                "retry_status" => "0",
                //逗号隔开 json里套json mysql可能报错
                "retry_info" => "",
                "is_supply" => "0",
            	//用户头像
            	"user_img"=> isset($userInfo['user_img'])?$userInfo['user_img']:'',
            ];

            $user['doctor_id'] = "0";
            $user['doctor_name'] = $doctor_name;
            $user['hospital_id'] = $hospital_id;
            $user['hospital_name'] = $hospital_name;
            $user['hospital_section_id'] = $hospital_section_id;
            $user['section_id'] = "";
            $user['section_name'] = $section_name;
            $user['id_card'] = $id_card;
            $user['medical_card'] = $medical_card;
            $user['doctor_position'] = $doctor_position;
            $user['is_free'] = '1';
            if ($order_type == "17") {
                $user['items_name'] = "解读报告";
            }
            if ($hospital_id) {
                $hospitalInfo = $modules->runAction('hospital/getById', ['id' => $hospital_id]);
                $user['hospital_name'] = $hospitalInfo['info']['hospital_name'];
            }
            $NoPrice= false; 
            if ($doctor_id) {
                $doctorInfo = $modules->runAction('doctor/getDoctorById', ['id' => $doctor_id]);
                if(!$doctorInfo){
                	$doctorInfo = $modules->runAction('doctor/getAtDoctorById', ['id' => $doctor_id]);
                }
                if(!$doctorInfo){
                	return UResponse::formatData(UResponse::$code['AccessDeny'], "暂无医生信息");
                }
                $user['doctor_id'] = $doctorInfo['doctor_id'];
                $user['doctor_name'] = $doctorInfo['doctor_name'];
                $user['hospital_id'] = $doctorInfo['hospital_id'];
                $user['hospital_name'] = $doctorInfo['hospital_name'];
                if (isset($doctorInfo['price'])){
                	OrderPrice::setPrice($doctorInfo['price']);
                	if ($doctorInfo['price']<=0){
                		$NoPrice = true;
                		$user['is_free'] = '2';
                		$user['order_state'] = $orderStateInfo['type2']['val'];
                	}
                }
                //查询用户与当前医生是否有未完成的订单
                $existOrder = Yii::$app->getModule('patient')->runAction('userorder/getorderinfobycondition',
                    ['orderType' =>'19','condition'=>['user_id'=>$userInfo["user_id"],'doctor_id'=>$user['doctor_id']],'otherCondition'=>' order_state < 3 ']);
                if($existOrder){
                    return UResponse::formatData(UResponse::$code['AccessDeny'], "与当前医生的在线问诊订单还未完成");
                }
                //在线咨询创建账户
                if ($order_type == "19") {
                    //创建患者账户
                    if (!isset($userInfo['access_token']) || !$userInfo['access_token']) {
                    	//不传头像会报错
                    	if(!$userInfo['user_img']){
                    		$userInfo['user_img'] = 'http://files.test.huobanys.com/group1/M00/00/ED/wKhkxFnLGJ-AUSovAAAQsF_ihwE565.png';
                    	}
                        $result = Yii::$app->rongyun->getInstance()->getToken($userInfo['user_id'], $userInfo['user_name'], $userInfo['user_img']);
                        $result = json_decode($result, true);

                        if (!is_array($result) || $result['code'] != 200) {
                            return UResponse::formatData(UResponse::$code['AccessDeny'], "系统错误，请稍候重试");
                        }
                        Yii::$app->getModule('patient')->runAction('userssdb/updateuserinfo',
                            ['id' => $userInfo['user_id'], 'info' => ['access_token' => $result['token']]]);
                        $userInfo['access_token'] = $result['token'];
                    }
                    $user['user_token'] = $userInfo['access_token'];
                    //查询医生账户或创建医生账户
                    $doctorBasicInfo = Yii::$app->getModule('doctor')->runAction("user/getInfoById", ['id' => $doctorInfo['doctor_id']]);
                    if (!$doctorBasicInfo){
                    	return UResponse::formatData(UResponse::$code['AccessDeny'], "系统错误，请稍候重试");
                    }
                    //医生头像
                    $user['doctor_img'] = $doctorBasicInfo['user_img'];
                    if(!$doctorBasicInfo['access_token']){
                    	//不传头像会报错
                    	if(!$doctorInfo['doctor_head']){
                    		$doctorInfo['doctor_head'] = 'http://files.test.huobanys.com/group1/M00/00/ED/wKhkxFnLGOaAftQUAAAesOMNjhA115.png';
                    	}
                    	$doctorToken = Yii::$app->rongyun->getInstance()->getToken($doctorInfo['doctor_id'], $doctorInfo['doctor_name'], $doctorInfo['doctor_head']);
                    	$doctorToken = json_decode($doctorToken, true);
                    	if (!is_array($doctorToken) || $doctorToken['code'] != 200) {
                    		return UResponse::formatData(UResponse::$code['AccessDeny'], "系统错误，请稍候重试");
                    	}
                    	//更新医生账户
                    	 Yii::$app->getModule('doctor')->runAction('user/updateuserinfo',
                    			['id' => $doctorInfo['doctor_id'],'info'=>['access_token'=> $doctorToken['token']]]);
                    	$user['doctor_token'] = $doctorToken['token'];
                    }else{
                    	$user['doctor_token'] = $doctorBasicInfo['access_token'];
                    }   
                }
            }
            if ($hospital_section_id) {
                $hospitalSectionInfo = $modules->runAction('hospitalsections/getById', ['id' => $hospital_section_id]);
                $user['hospital_id'] = $hospitalSectionInfo['hospital_id'];
                $user['hospital_name'] = $hospitalSectionInfo['hospital_name'];
                $user['hospital_section_id'] = $hospitalSectionInfo['hospital_sections_id'];
                $user['section_id'] = $hospitalSectionInfo['section_id'];
                $user['section_name'] = $hospitalSectionInfo['section_name'];
            }
            $user["vip_type"] = $vip_type;
            if ($order_date) {
                $user['order_date'] = $order_date;
            } else {
                $user['order_date'] = "";
            }
            if ($disease_photos) {
                $photos = explode(",", $disease_photos);
                $user['order_file'] = is_array($photos) ? $photos : [];
            } else {
                $user['order_file'] = [];
            }
            $modules = Yii::$app->getModule('patient');
            $result = $modules->runAction('userorder/createOrder',
                ['info' => $user]);
            if (!$result) {
                return UResponse::formatData("0", "预约失败", (object)['list' => []]);
            }
            $modules->runAction('ordertip/setCommonItem', ['id' => $result['order_id']]);
            if ($order_type == "19") {
            	if (!$NoPrice){
                    //15分钟未支付 系统取消
            		Yii::$app->queue->send(['info' => ['order_id' => $result['order_id']]
            		], RabbitConfig::SYSTEM_CANCEL_FIRST_ORDER, StateConfig::CANNAL_ORDER);
                    Yii::$app->queue->send(['info' => ['order_id' => $result['order_id']]
                    ], RabbitConfig::SYSTEM_FINISH_ORDER, 86400 * StateConfig::LIMIT_INQUIRY);
            	}   
            }
            return UResponse::formatData("0", "预约成功", (object)['list' => [$result]]);
        } catch (Exception $e) {
            Yii::getLogger()->log($e->getMessage(), Logger::LEVEL_ERROR);
            return UResponse::formatData("0", "预约失败", (object)[]);
        }
    }

    //在线问诊再次购买
    public function actionOrderoperationagain()
    {  
    	try {
    		$userInfo = Yii::$app->runData->get("userInfo");
    		$order_id = Yii::$app->getParams->get("order_id");
    		if (!$order_id){
    			return UResponse::formatData(UResponse::$code['AccessDeny'], "参数错误!");
    		}
    		$modules = Yii::$app->getModule('patient');
    		$orderInfo = $modules->runAction('userorder/getInfoById', ['id' => $order_id]);
    		if (!$orderInfo){
    			return UResponse::formatData(UResponse::$code['AccessDeny'], "订单不存在!");
    		}
    		$orderInfo = OrderOutput::formatData($orderInfo);
    		$order_type = $orderInfo['order_type'];
    		$doctor_id  = $orderInfo['doctor_id'];
    		$order_id   = Yii::$app->DBID->getOrderId($userInfo['user_id'], $order_type);
    		$order_number = Encrypt::getOrderPrefix($order_type) . $order_id;
    		//收集数据存储预约
    		$orderStateInfo = isset(StateConfig::getOrderStatus(StateConfig::$nowOrderVersion)['ordertype' . $order_type])
                ? StateConfig::getOrderStatus(StateConfig::$nowOrderVersion)['ordertype' . $order_type]
                : StateConfig::getOrderStatus(StateConfig::$nowOrderVersion)['ordertype0'];
            if(isset($orderStateInfo['vip'.$orderInfo['vip_type']])){
                $orderStateInfo = $orderStateInfo['vip'.$orderInfo['vip_type']];
            }
    		$user = [
    				"order_id"        => $order_id,
    				"order_type"      => $orderInfo['order_type'],
    				"order_name"      => $orderInfo['order_name']? $orderInfo['order_name']: $userInfo['user_name'],
    				"order_number"    => $order_number,
    				"order_gender"    => $orderInfo['order_gender'],
    				"order_phone"     => $orderInfo['order_phone'] ?$orderInfo['order_phone'] : $userInfo['user_mobile'],
    				"order_city"      => isset($orderInfo['order_city'])?$orderInfo['order_city']:"",
    				"order_city_name" => isset($orderInfo['district_name']) ? $orderInfo['district_name'] : "",
    				"order_state"     => $orderStateInfo['type1']['val'],
    				"order_design"    => '无',
    				"order_time"      => date("Y-m-d H:i:s"),
    				"disease_name"    => $orderInfo['disease_name'],
    				"disease_des"     => $orderInfo['disease_des'],
    				"user_id"         => $userInfo["user_id"],
    				"order_age"       => $orderInfo['order_age'],
    				"report_check_time" => $orderInfo['report_check_time'],
    				"check_organization" => $orderInfo['check_organization'],
    				"retry_status" => "0",
    				//逗号隔开 json里套json mysql可能报错
    				"retry_info" => "",
    				"is_supply" => "0",
    				"user_img"=> isset($userInfo['user_img'])?$userInfo['user_img']:'',
    		];
    		$user['doctor_id']   = $orderInfo['doctor_id'];
    		$user['doctor_name'] = $orderInfo['doctor_name'];
    		$user['hospital_id'] = $orderInfo['hospital_id'];
    		$user['hospital_name'] = $orderInfo['hospital_name'];
    		$user['hospital_section_id'] = $orderInfo['hospital_section_id'];
    		$user['section_id'] = $orderInfo['section_id'];
    		$user['section_name'] = $orderInfo['section_name'];
    		$user['id_card'] = $orderInfo['id_card'];
    		$user['is_free'] = '1';
    		if ($order_type == "17") {
    			$user['items_name'] = "解读报告";
    		}
    		$NoPrice= false;
    		if ($doctor_id) {
                $doctorInfo = Yii::$app->getModule('doctor')->runAction('doctor/getAtDoctorById', ['id' => $doctor_id]);
                if(!$doctorInfo){
                   $doctorInfo = Yii::$app->getModule('doctor')->runAction('doctor/getDoctorById', ['id' => $doctor_id]);
                }
    			if(!$doctorInfo){
    				return UResponse::formatData(UResponse::$code['AccessDeny'], "暂无医生信息");
    			}
    			$user['doctor_id']   = $doctorInfo['doctor_id'];
    			$user['doctor_name'] = $doctorInfo['doctor_name'];
    			$user['hospital_id'] = $doctorInfo['hospital_id'];
    			$user['hospital_name'] = $doctorInfo['hospital_name'];
    			if (isset($doctorInfo['price'])){
    				OrderPrice::setPrice($doctorInfo['price']);
    				if ($doctorInfo['price']<=0){
    					$NoPrice = true;
    					$user['is_free'] = '2';
    					$user['order_state'] = $orderStateInfo['type2']['val'];
    				}
    			}
    			if ($order_type == "19") {
    				$user['user_token']   = $orderInfo['user_token'];
    				$user['doctor_token'] = $orderInfo['doctor_token'];
    				//医生头像
    				$user['doctor_img']   =  isset($orderInfo['doctor_img'])?$orderInfo['doctor_img']:'';
    			}
    		}
    		$user["vip_type"] = $orderInfo['vip_type'];
    		$user['order_date'] = $orderInfo['order_date'];
    		$user['order_file'] = '';
    		
    		$modules = Yii::$app->getModule('patient');
    		$result = $modules->runAction('userorder/createOrder',
    				['info' => $user]);
    		if (!$result) {
    			return UResponse::formatData("0", "预约失败", (object)['list' => []]);
    		}
    		$modules->runAction('ordertip/setCommonItem', ['id' => $result['order_id']]);
    		//30分钟未支付 系统取消
    		if ($order_type == "19") {
    			if (!$NoPrice){
            		Yii::$app->queue->send(['info' => ['order_id' => $result['order_id']]
            		], RabbitConfig::SYSTEM_CANCEL_FIRST_ORDER, StateConfig::CANNAL_ORDER);
            		Yii::$app->queue->send(['info' => ['order_id' => $result['order_id']]
                    ], RabbitConfig::SYSTEM_FINISH_ORDER, 86400 * StateConfig::LIMIT_INQUIRY);
            	}  
    		}
    		return UResponse::formatData("0", "预约成功", (object)['list' => [$result]]);
    
    	} catch (Exception $e) {
    		Yii::getLogger()->log($e->getMessage(), Logger::LEVEL_ERROR);
    		return UResponse::formatData("0", "预约失败", (object)[]);
    	}
    }
    
    /**
     * 集团用户提交解读报告请求
     */
    public function actionUsercommitorder() {

        $orderId = Yii::$app->getParams->get("order_id");
        if (!$orderId) {
            return UResponse::formatData(UResponse::$code['AccessDeny'], "order_id 不能为空", (object)[]);
        }
        $modules = Yii::$app->getModule('patient');
        $result = $modules->runAction('userorder/getInfoById', ['id' => $orderId]);
        if (!$result) {
            return UResponse::formatData(UResponse::$code['AccessDeny'], "订单号不存在");
        }
        if ($result['order_state'] >= 2) {
            return UResponse::formatData(UResponse::$code['AccessDeny'], "该订单不可修改", (object)[]);
        }
        //是否取消
        if ($result['order_state'] == '99') {
            return UResponse::formatData(UResponse::$code['AccessDeny'], "该订单已取消");
        }
        //是否完成
        $state = $result['order_state'] + 1;
        if (!isset(StateConfig::getOrderStatus($result['order_version'])["ordertype" . $result['order_type']]['type' . $state])) {
            return UResponse::formatData(UResponse::$code['AccessDeny'], "该订单已完成");
        }
        OrderJson::setValue(OrderJson::ORDER_STATE_RECORD, OrderInput::formatProcessRecord("", "用户修改", "0", $state, "", "", 1));
        //更新订单状态
        $updateInfo = [
            "can_pay"     => "0",
            "pay_money"   => "0",
            "order_state" => $state,
        ];
        $newOrderStateConfig = StateConfig::getOrderStatus($result['order_version'])["ordertype" . $result['order_type']]['type' . $state];
        if ($newOrderStateConfig["canPay"]) {
            $updateInfo['can_pay'] = "1";
            $updateInfo['pay_money'] = OrderPrice::get($result['order_type'], $state, [], $result['vip_type'], $result['order_version']);
        }
        //是否需要时间限制
        if ($newOrderStateConfig['expire'] > 0) {
            $expireTime = $newOrderStateConfig['expire'] * 3600;
            if (CONF_ENV != 'pro_') {
                $expireTime = 600;
            }
            Yii::$app->queue->send([
                'info' => ['order_id' => $result['order_id']],
            ], RabbitConfig::SYSTEM_CANCEL_ORDER, $expireTime);
        }
        $modifyResult = $modules->runAction('userorder/updateinfo',
            ['id' => $result['order_id'], 'info' => $updateInfo]);
        return UResponse::formatData("0", "修改成功", $modifyResult);
    }

    /**
     * 修改报告图片信息
     *
     */
    public function actionModifyorderimage() {

        $orderId = Yii::$app->getParams->get("order_id");
        if (!$orderId) {
            return UResponse::formatData(UResponse::$code['AccessDeny'], "order_id 不能为空", (object)[]);
        }

        $orderFile = Yii::$app->getParams->get("order_file");
        if ($orderFile) {
            $photos = explode(",", $orderFile);
            $orderFile = is_array($photos) ? $photos : [];
        } else {
            $orderFile = [];
        }
        $modules = Yii::$app->getModule('patient');
        OrderOutput::formatImageFlag();
        $orderInfo = $modules->runAction('userorder/getInfoById', ['id' => $orderId]);
        $tempFlag = $orderInfo['retry_info'];
        $index = 0;
        foreach($orderInfo['orderfile_url'] as $k => $v) {
            if (in_array($k, $tempFlag)) {
                $orderInfo['orderfile_url'][$k] = $orderFile[$index];
                $index++;
            }
        }
        $result = $modules->runAction('userorder/updateReportFile', ['id' => $orderId, 'info' => ['order_file'=>$orderInfo['orderfile_url']]]);
        return UResponse::formatData("0", "修改成功", $result);
    }

    /**
     * 快速问诊接口
     * @return array
     * @throws \Exception
     */
    /*
     请求字段名	必选	类型及范围	说明
    order_name	true	int	就诊人姓名
    order_gender	false	int	就诊人性别
    order_age	false	int	就诊人年龄
    disease_name	false	verchar	疾病名称，未确诊可不填
    disease_des	true	varchar	疾病描述
    disease_photos	false	string	疾病相关照片,格式为文件之间逗号隔开，如1034,1045
     */
    public function actionInquiry()
    {
        try {
            $order_name = Yii::$app->getParams->get("order_name");
            $order_gender = Yii::$app->getParams->get("order_gender");
            $order_age = Yii::$app->getParams->get("order_age");
            $disease_name = Yii::$app->getParams->get("disease_name");
            $disease_des = Yii::$app->getParams->get("disease_des");
            $disease_photos = Yii::$app->getParams->get("disease_photos");

            if (!$order_gender && !$order_age && !$disease_des) {
                return UResponse::formatData(UResponse::$code['AccessDeny'], "必填项不能为空");
            }
            $userInfo = Yii::$app->runData->get("userInfo");
            $inquiry_id = Yii::$app->DBID->getID("db.tuser_inquiry");
            $user = [
                "inquiry_id"       => $inquiry_id,
                "user_id"          => $userInfo["user_id"],
                "inquiry_time"     => date("Y-m-d H:i:s"),
                "inquiry_age"      => $order_age,
                "inquiry_state"    => StateConfig::$inquiryStatus['inquiry_state_no']['val'],
                "inquiry_name"     => $order_name,
                "inquiry_gender"   => $order_gender,
                "disease_name"     => $disease_name,
                "disease_des"      => $disease_des,
                "inquiry_reanswer" => "",
                "inquiry_retime"   => date("Y-m-d H:i:s"),
            ];
            if ($disease_photos) {
                $photos = explode(",", $disease_photos);
                $user['inquiry_file'] = is_array($photos) ? json_encode($photos, JSON_UNESCAPED_UNICODE) : '[]';
            } else {
                $user['inquiry_file'] = '[]';
            }

            $modules = Yii::$app->getModule('patient');
            $result = $modules->runAction('userinquiry/createInquiry',
                ['info' => $user]);
            if (!$result) {
                return UResponse::formatData("0", "获取快速问诊失败", (object)['list' => []]);
            }

            return UResponse::formatData("0", "获取快速问诊成功", (object)['list' => [$result]]);
        } catch (Exception $e) {
            Yii::getLogger()->log($e->getMessage(), Logger::LEVEL_ERROR);

            return UResponse::formatData("0", "编辑用户资料失败", (object)[]);
        }
    }

    /**
     * 获取统计数据
     * @return array
     * @throws \yii\base\InvalidRouteException
     */
    public function actionGetstaticdata() {

        $userInfo = Yii::$app->runData->get("userInfo");
        $modules = Yii::$app->getModule('patient');
        $result = $modules->runAction('userordertip/getStaticString', ['userId' => $userInfo['user_id'],]);
        return UResponse::formatData("0", "获取我的问诊成功", $result);
    }

    /*
     * 问诊详情接口
     */
    /*
     * disease_name     疾病名称
     * inquiry_time     问诊时间
     * disease_des      病情描述
     * inquiry_state    状态        返回数字还是字符串
     * inquiry_retime       回复时间
     * inquiry_reanwser   医生回复内容
     */
    public function actionGetinquiry()
    {
        try {
            $inquiry_id = Yii::$app->getParams->get("inquiry_id");

            $modules = Yii::$app->getModule('patient');
            $result = $modules->runAction('userinquiry/getInquiryById',
                ['id' => $inquiry_id]);

            if (!$result) {
                return UResponse::formatData("0", "获取我的问诊成功", (object)[]);
            }
            $response = [
                "disease_des"      => $result["disease_des"],
                "inquiry_state"    => $result["inquiry_state"],
                "inquiry_retime"   => $result["inquiry_retime"],
                "inquiry_reanswer" => $result["inquiry_reanswer"],
                "disease_name"     => $result["disease_name"],
                "inquiry_time"     => $result["inquiry_time"],
            ];

            return UResponse::formatData("0", "获取我的问诊成功", $response);
        } catch (Exception $e) {
            Yii::getLogger()->log($e->getMessage(), Logger::LEVEL_ERROR);

            return UResponse::formatData("0", "获取我的问诊失败", (object)[]);
        }
    }

    public function actionGetinquirylist()
    {

        try {
            $userInfo = Yii::$app->runData->get("userInfo");
            $page = intval(Yii::$app->getParams->get("page"));
            $limit = 10;
            if (!$page) {
                $page = 1;
            }
            $modules = Yii::$app->getModule('patient');
            $result = $modules->runAction('userinquiry/getbycondition',
                ['condition' => ['user_id' => $userInfo['user_id']], 'page' => $page, 'limit' => $limit]);
            $response = ['list' => []];
            foreach ($result as $k => $v) {
                $response['list'][] = [
                    "inquiry_id"     => $v["inquiry_id"],
                    "inquiry_name"   => $v["inquiry_name"],
                    "inquiry_state"  => $v["inquiry_state"],
                    "disease_design" => $v["disease_des"],
                    "inquiry_time"   => $v["inquiry_time"],
                ];
            }

            return UResponse::formatData("0", "获取问诊成功", $response);
        } catch (Exception $e) {
            Yii::getLogger()->log($e->getMessage(), Logger::LEVEL_ERROR);

            return UResponse::formatData("0", "获取我的问诊失败", (object)[]);
        }
    }

    /*
     * 取消问诊接口
     */
    public function actionCancelinquiry()
    {

        try {
            $inquiry_id = Yii::$app->getParams->get("inquiry_id");
            if (!$inquiry_id) {
                return UResponse::formatData(UResponse::$code['AccessDeny'], "必填项不能为空");
            }

            $modules = Yii::$app->getModule('patient');
            $result = $modules->runAction('userinquiry/updateinfo',
                ['id' => $inquiry_id, 'info' => ['inquiry_state' => StateConfig::$inquiryStatus['inquiry_state_cancel']['val']]]);
            if ($result) {
                return UResponse::formatData("0", "取消问诊成功");
            }

            return UResponse::formatData("0", "取消问诊成功", (object)[]);
        } catch (Exception $e) {
            Yii::getLogger()->log($e->getMessage(), Logger::LEVEL_ERROR);

            return UResponse::formatData("0", "取消问诊成功", (object)[]);
        }
    }

    /*
     * 预约详情接口
     * user_name            用户名     tsuer
     * disease_name         疾病名称
     * disease_des          病情描述
     * order_time           用户提交预约时间
     * orderfile_url        病情资料   TUser_OrderFile
     * order_state          状态
     * order_design         备注
     * order_update_time    预约状态更新时间
     */
    public function actionGetorderlist()
    {
        try {
            $userInfo = Yii::$app->runData->get("userInfo");
            $order_type = Yii::$app->getParams->get("order_type");
            $common_state = Yii::$app->getParams->get("common_state");
            $order_state = Yii::$app->getParams->get("order_state");
            $page = intval(Yii::$app->getParams->get("page"));
            $orderStatusIngConfig = StateConfig::getOrderStatusIng(StateConfig::$nowOrderVersion);
            if ($order_type != "15") {
                $class  = isset(StateConfig::$orderListMap['t' . $order_type]) ? StateConfig::$orderListMap['t' . $order_type] : StateConfig::$orderListMap['t1'];
                $common = isset($orderStatusIngConfig['t' . $order_type]) ? $orderStatusIngConfig['t' . $order_type] : $orderStatusIngConfig['t1'];
            } else {
                $class  = isset(StateConfig::$orderListMap['t12']) ? StateConfig::$orderListMap['t12'] : StateConfig::$orderListMap['t1'];
                $common = isset($orderStatusIngConfig['t15']) ? $orderStatusIngConfig['t15'] : $orderStatusIngConfig['t1'];
            }
            $commonSql = "";
            if (!$common_state) {
                $common_state = "0";
            }
            if (isset($common['t' . $common_state])) {
                $commonSql = $common['t' . $common_state];
            }

            $limit = 10;
            if (!$page) {
                $page = 1;
            }
            $arr = ["user_id" => $userInfo["user_id"], 'is_delete' => '1'];
            if ($order_type) {
                //$arr["order_type"] = $order_type;
            }
            if ($order_state) {
                $arr["order_state"] = $order_state;
            }
            //全部订单的状态单独处理
            if($order_type=='999'){
                $modules = Yii::$app->getModule('patient');
                $result = $modules->runAction('userorder/getallbycondition',
                    ['class' => $class, 'userInfo' => $userInfo,'common_state'=>$common_state,'page' => $page, 'limit' => $limit]);
            }else{
                $modules = Yii::$app->getModule('patient');
                $result = $modules->runAction('userorder/getbycondition',
                    ['class' => $class, 'condition' => $arr, 'page' => $page, 'limit' => $limit, 'otherCondition' => $commonSql]);
            }
            $response = ['list' => []];
            foreach ($result as $k => $v) {
                $response['list'][] = $v;
            }
            return UResponse::formatData("0", "获取问诊成功", $response);
        } catch (Exception $e) {
            Yii::getLogger()->log($e->getMessage(), Logger::LEVEL_ERROR);

            return UResponse::formatData("0", "取消问诊成功", (object)[]);
        }
    }

    /**
     * 获取商品订单详情
     * @return array
     */
    public function actionGetgoodorder()
    {

        try {
            $userInfo = Yii::$app->runData->get("userInfo");
            $order_id = Yii::$app->getParams->get("order_id");
            $modules = Yii::$app->getModule('patient');
            $result = $modules->runAction('userorder/getInfoById',
                ['id' => $order_id]);
            if (!$result || $result['is_delete'] != StateConfig::$activeFlag['yes']['val'] || $result['user_id'] != $userInfo['user_id']) {
                return UResponse::formatData("0", "获取问诊成功", (object)[]);
            }
            $payInfo = $modules->runAction('pay/getInfoByUidOrderId',
                ['uid' => $userInfo['user_id'], "orderId" => substr($result['order_id'], 6)]);
            $goodsInfo = Uresponse::messageToString(OrderOutput::getProductInfo(substr($result['order_id'], 6)));
            if(!$goodsInfo){
                $goodsInfo = $modules->runAction('orderaccompanydetail/getbyid',
                    ['id' => substr($result['order_id'], 6)]);
            }
            $goodsInfo["goods_image"] = "";
            $goodsInfo["goods_service"] = "";
            $goodsInfo["pay_method"] = "";
            $map = [
                "1" => "支付宝",
                "2" => "微信",
                "3" => "银联",
            ];
            if ($payInfo) {
                $goodsInfo["pay_method"] = $map[$payInfo['pay_type']];
            }
            $goodsInfo['card_type_desc'] = "电子卡";
            return UResponse::formatData("0", "获取问诊成功", ["order"=>$result, "good"=>$goodsInfo]);
        } catch (Exception $e) {
            Yii::getLogger()->log($e->getMessage(), Logger::LEVEL_ERROR);
            return UResponse::formatData("0", "获取问诊成功", (object)[]);
        }
    }

    /*
     *
     * 预约详情接口
     * user_name            用户名     tsuer
     * disease_name         疾病名称
     * disease_des          病情描述
     * order_time           用户提交预约时间
     * orderfile_url        病情资料   TUser_OrderFile
     * order_state          状态
     * order_design         备注
     * order_update_time    预约状态更新时间
     */
    public function actionGetorder()
    {

        try {
            $userInfo = Yii::$app->runData->get("userInfo");
            $order_id = Yii::$app->getParams->get("order_id");
            $modules = Yii::$app->getModule('patient');
            $result = $modules->runAction('userorder/getInfoById',
                ['id' => $order_id]);
            if (!$result || $result['is_delete'] != StateConfig::$activeFlag['yes']['val'] || $result['user_id'] != $userInfo['user_id']) {
                return UResponse::formatData("0", "获取问诊成功", (object)[]);
            }
            $result['nowTime']= (string)time();
            if(isset($result['orderfile_url'])){
                $url = [];
                foreach($result['orderfile_url'] as $uk=>$kv){
                    if($kv){
                        $url[] = $kv;
                    }
                }
                $result['orderfile_url'] = $url;
            }
            return UResponse::formatData("0", "获取问诊成功", $result);
        } catch (Exception $e) {
            Yii::getLogger()->log($e->getMessage(), Logger::LEVEL_ERROR);

            return UResponse::formatData("0", "获取问诊成功", (object)[]);
        }
    }

    public function actionOrderdetail() {

        try {
            $order_id = Yii::$app->getParams->get("id");

            $modules = Yii::$app->getModule("patient");
            $result = $modules->runAction('userorder/getInfoById',
                ['id' => $order_id]);
            Yii::$app->response->format = Response::FORMAT_HTML;
            return $this->renderPartial("detail".StateConfig::$orderType['type'.$result['order_type']]['list'], ["orderInfo" => $result]);
        } catch (Exception $e) {
            Yii::getLogger()->log($e->getMessage(), Logger::LEVEL_ERROR);
        }
        Yii::$app->response->format = Response::FORMAT_HTML;
        return "";
    }

    /**
     * 取消订单
     */
    public function actionCancelorder()
    {
        try {
            //订单Id
            $order_id = Yii::$app->getParams->get("order_id");
            if (!$order_id) {
                return UResponse::formatData(UResponse::$code['AccessDeny'], "必填项不能为空");
            }
            $userInfo = Yii::$app->runData->get("userInfo");
            $modules = Yii::$app->getModule("patient");
            $result = $modules->runAction('userorder/getInfoById',
                ['id' => $order_id]);
            //订单是否已经取消
            if (!$result || $result['order_state'] == "99") {
                return UResponse::formatData(UResponse::$code['AccessDeny'], "该订单已取消");
            }
            $orderStateBase = StateConfig::getOrderStatus($result['order_version'])["ordertype" . $result['order_type']];
            $orderStateConfig = isset($orderStateBase['vip'.$result['vip_type']])?$orderStateBase['vip'.$result['vip_type']]['type' . $result['order_state']]:$orderStateBase['type' . $result['order_state']];
            if ($result['user_id'] != $userInfo['user_id'] || $orderStateConfig['cancel'] == "0") {
                return UResponse::formatData(UResponse::$code['AccessDeny'], "该订单不可取消");
            }
            $updateInfo = [
                "order_state" => "99",
                "update_time" => time(),
                "can_pay"     => 0,
                "pay_money"   => 0,
            ];
            OrderJson::setValue(OrderJson::ORDER_STATE_RECORD, OrderInput::formatProcessRecord($result['user_id'], "", 0, 99, "", 0, 1));
            $modifyResult = $modules->runAction('userorder/updateinfo',
                ['id' => $result['order_id'], 'info' => $updateInfo]);
            $modules->runAction('ordertip/delCommonItem', ['id' => $order_id]);
            return UResponse::formatData("0", "取消订单成功", $modifyResult);
        } catch (Exception $e) {
            Yii::getLogger()->log($e->getMessage(), Logger::LEVEL_ERROR);
            return UResponse::formatData(UResponse::$code['InvalidArgument'], "修改订单失败", (object)[]);
        }

    }

    /**
     * 更改订单状态
     */
    public function actionUpdateorderstatus()
    {
        try {
            //订单Id
            $order_id = Yii::$app->getParams->get("order_id");
            //支付金额
            $orderMoney = Yii::$app->getParams->get("order_money");
            //就诊时间
            $orderTime = Yii::$app->getParams->get("order_time");
            //支付设置留言
            $orderMoneyMessage = Yii::$app->getParams->get("order_money_desc");
            //就诊时间设置留言
            $orderTimeMessage = Yii::$app->getParams->get("order_time_desc");

            $modules = Yii::$app->getModule("patient");
            $result = $modules->runAction('userorder/getInfoById',
                ['id' => $order_id]);
            if (!$result) {
                return UResponse::formatData(UResponse::$code['AccessDeny'], "订单号不存在");
            }
            //是否取消
            if ($result['order_state'] == '99') {
                return UResponse::formatData(UResponse::$code['AccessDeny'], "该订单已取消");
            }
            $orderStateInfo = StateConfig::getOrderStatus($result['order_version'])["ordertype" . $result['order_type']];
            if(isset($orderStateInfo['vip'.$result['vip_type']])){
                $orderStateInfo = $orderStateInfo['vip'.$result['vip_type']];
            }
            //是否完成
            $orderStateConfig = $orderStateInfo['type' . $result['order_state']];
            $state = $result['order_state'] + 1;
            if (!isset($orderStateInfo['type' . $state])) {
                return UResponse::formatData(UResponse::$code['AccessDeny'], "该订单已完成");
            }
            //是否需要设置价格
            if ($orderStateConfig['configMoney'] && (!$orderMoney || $orderMoney <= 0)) {
                return UResponse::formatData(UResponse::$code['AccessDeny'], "需要设置该订单价格");
            }
            //是否需要设置就诊时间
            if ($orderStateConfig['configTime'] && !$orderTime) {
                return UResponse::formatData(UResponse::$code['AccessDeny'], "需要设置该订单就诊时间");
            }
            //支付状态下的订单 不可修改
            if ($result['can_pay'] == "1") {
                return UResponse::formatData(UResponse::$code['AccessDeny'], "待支付的订单后台无法修改");
            }
            //设置价格
            if ($orderStateConfig['configMoney']) {
                $orderRecordInfo = OrderInput::getSetPriceRecord("", "管理人员", $orderMoney, $orderMoneyMessage);
                OrderJson::setValue(OrderJson::ORDER_STATE_RECORD, $orderRecordInfo);
            } else {
                $orderRecordInfo = OrderOutput::getNowRecordT100();
            }
            //设置就诊时间
            if ($orderStateConfig['configTime']) {
                $timeRecordInfo = OrderInput::getSetPriceRecord("", "管理人员", "0", $orderTimeMessage, $orderTime);
                OrderJson::setValue(OrderJson::ORDER_STATE_RECORD, $timeRecordInfo);
            }
            OrderJson::setValue(OrderJson::ORDER_STATE_RECORD, OrderInput::formatProcessRecord("", "管理人员", $orderMoney, $state, "", "", 2));
            //更新订单状态
            $updateInfo = [
                "can_pay"     => "0",
                "pay_money"   => "0",
                "order_state" => $state,
            ];
            $newOrderStateConfig = $orderStateInfo['type' . $state];
            if ($newOrderStateConfig["canPay"]) {
                $updateInfo['can_pay'] = "1";
                $updateInfo['pay_money'] = OrderPrice::get($result['order_type'], $state, $orderRecordInfo, $result['vip_type'], $result['order_version']);
            }
            //是否需要时间限制
            if ($newOrderStateConfig['expire'] > 0) {
                $expireTime = $newOrderStateConfig['expire'] * 3600;
                if (CONF_ENV != 'pro_') {
                    $expireTime = 600;
                }
                Yii::$app->queue->send([
                    'info' => ['order_id' => $result['order_id']],
                ], RabbitConfig::SYSTEM_CANCEL_ORDER, $expireTime);
            }
            $modifyResult = $modules->runAction('userorder/updateinfo',
                ['id' => $result['order_id'], 'info' => $updateInfo]);
            return UResponse::formatData("0", "修改订单状态成功", $modifyResult);
        } catch (Exception $e) {
            Yii::getLogger()->log($e->getMessage(), Logger::LEVEL_ERROR);
            return UResponse::formatData(UResponse::$code['InvalidArgument'], "修改订单失败", (object)[]);
        }
    }

    /**
     * 获取首次支付价格
     */
    public function actionGetfirstmoney()
    {
        //1 手术科室预约  12 vip服务预约 9预约诊疗 13公益 10海外医疗
        $map = [
            "1"  => "1",
            "9"  => "5",
            "12" => "12",
            "10" => "3",
            "17" => "17",
        ];
        $ordertype = Yii::$app->getParams->get("order_type");
        $ordertype = $map[$ordertype];
        $vip_type = Yii::$app->getParams->get("vip_type");
        //if ($vip_type == '4') {
            //$ordertype = "14";
        //}
        $money = OrderPrice::get($ordertype, 1, "", $vip_type, StateConfig::$nowOrderVersion);
        return UResponse::formatData("0", "获取价格成功", ['money' => $money]);
    }

    /**
     *
     */
    public function actionCreatelink()
    {
        try {
            $url = Yii::$app->getParams->get("url");
            $file = UploadedFile::getInstanceByName('fileName');
            if (!$file) {
                return UResponse::formatData(UResponse::$code['InvalidArgument'], "提交信息有误");
            }
            $fileName = $file->tempName;
            $fileExt = $file->getExtension();
            $info = Yii::$app->fdfs->upload($fileName, $fileExt);
            if (!$info) {
                return UResponse::formatData(UResponse::$code['InvalidArgument'], "提交信息有误");
            }
            $image_url = $info['url'];
            $data = [
                'page_id'    => Yii::$app->DBID->getID('db.tlink_page'),
                'page_image' => $image_url,
                'page_url'   => $url,
            ];

            $modules = Yii::$app->getModule("patient");
            $result = $modules->runAction('linkpage/create', ['info' => $data]);
            return UResponse::formatData("0", "获取引导页成功", $result);

        } catch (Exception $e) {
            Yii::getLogger()->log($e->getMessage(), Logger::LEVEL_ERROR);

            return UResponse::formatData(UResponse::$code['InvalidArgument'], "获取引导页失败", (object)[]);
        }
    }

    /**
     * 获取引导页
     */
    public function actionGetlinkpage()
    {

        try {
            $redis = Yii::$app->redis;
            $redisKey = AppRedisKeyMap::getLinkPage();
            $info = $redis->get($redisKey);
            if (!$info || CONF_ENV != "pro_") {
                $modules = Yii::$app->getModule("patient");
                $result = $modules->runAction('linkpage/findOne');
                if ($result && $result['page_image']) {
                    $str = parse_url($result['page_image']);
                    $str = trim($str['path'], '/');
                    $group = substr($str, 0, strpos($str, '/'));
                    $path = substr($str, strpos($str, '/') + 1);
                    $result['width'] = '100';
                    $result['height'] = '100';
                    if (!is_file('/tmp/' . $path)) {
                        $dirPath = pathinfo($path);
                        if (!is_dir('/tmp/' . $dirPath['dirname'])) {
                            mkdir('/tmp/' . $dirPath['dirname'], 0777, true);
                        }
                        $res = Yii::$app->fdfs->download_to_file($group, $path, "/tmp/" . $path);
                        if ($res) {
                            $imgInfo = getimagesize('/tmp/' . $path);
                            if ($imgInfo) {
                                $result['width'] = strval($imgInfo[0]);
                                $result['height'] = strval($imgInfo[1]);
                            }
                        }
                    } else {
                        $imgInfo = getimagesize('/tmp/' . $path);
                        if ($imgInfo) {
                            $result['width'] = strval($imgInfo[0]);
                            $result['height'] = strval($imgInfo[1]);
                        }
                    }
                    $info = json_encode($result);
                    $redis->set($redisKey, $info);
                    $redis->expire($redisKey, 3600);
                } else {
                    $result["width"] = 100;
                    $result["height"] = 100;
                    $result["page_image"] = "";
                    $result["page_url"] = "";
                    $info = json_encode($result);
                }
            }
            $result = json_decode($info, true);
            if ($result["page_image"]) {
                return UResponse::formatData("0", "获取引导页成功", $result);
            } else {
                return UResponse::formatData(UResponse::$code["InternalError"], "获取引导页失败", $result);
            }
        } catch (Exception $e) {
            Yii::getLogger()->log($e->getMessage(), Logger::LEVEL_ERROR);

            return UResponse::formatData(UResponse::$code['InvalidArgument'], "获取引导页失败", (object)[]);
        }
    }
    
    //获取优惠卷列表
    public function actionGetusercoupon()
    {
    	try {
    		$userInfo = Yii::$app->runData->get("userInfo");
    		$page = intval(Yii::$app->getParams->get("page"));
    		$limit = intval(Yii::$app->getParams->get("size"));
    		$order_id = Yii::$app->getParams->get("order_id");
    		if($page<=0)$page=1;
    		if($limit<=0)$limit=10;
    		$where = ' user_id = '.$userInfo["user_id"];
    		$where .= ' and status = 1';
    		if($order_id){
    			$type = substr($order_id,0,3)-100;
    			$where.=' and order_type='.$type;
    			$where.=' and expiry_time >='.time();
    		}
    		$start = ($page-1)*$limit;
    		$where .= ' order by expiry_time desc ';
    		$where .= ' limit '.$start.','.$limit;
    		$modules = Yii::$app->getModule('patient');
    		$result = $modules->runAction('ordercoupon/getlistbyuserid',
    			['where' =>$where]);
    		if ($result) {
    			$result = $this->QuickSort($result);
    			$result = $this->ExpirySort($result);
                $t = time();
    			foreach($result as $k=>$v){
                    if($v['expiry_time']>$t){
                        $result[$k]['is_expiry'] = '1';
                    }else{
                        $result[$k]['is_expiry'] = '2';
                    }
                }
    		}
    		return UResponse::formatData("0", "获取优惠卷成功", $result);
    	} catch (Exception $e) {
    		Yii::getLogger()->log($e->getMessage(), Logger::LEVEL_ERROR);
    		return UResponse::formatData("0", "获取优惠卷成功", []);
    	}
    }
    
    protected  function ExpirySort($arr){
    	if(!is_array($arr)) return false;
    	$length=count($arr);
    	if($length<=1) return $arr;
    	//数组元素有多个,则定义两个空数组
    	$left=$right=array();
    	//使用for循环进行遍历，把第一个元素当做比较的对象
    	foreach($arr as $k=>$v){
			if(isset($v['is_expiry'])&& $v['is_expiry']<2){    		
				$left[] = $v;
			}else{
				$right[] = $v;
			}
    	}
    	return array_merge($left,$right);
    }
    
    //按金额从小到大排序
    protected  function QuickSort($arr)
    {
    	$t = time();
    	//判断参数是否是一个数组
    	if(!is_array($arr)) return false;
    	//递归出口:数组长度为1，直接返回数组
    	$length=count($arr);
    	if($length<=1) return $arr;
    	//数组元素有多个,则定义两个空数组
    	$left=$right=array();
    	//使用for循环进行遍历，把第一个元素当做比较的对象
    	for($i=1;$i<$length;$i++)
    	{
    		if($arr[$i]['expiry_time']>$t){
    			$arr[$i]['is_expiry'] = '1';
    		}else{
    			$arr[$i]['is_expiry'] = '2';
    		}
    		//判断当前元素的大小
    		if($arr[$i]['order_money']>$arr[0]['order_money']){
    			$left[]=$arr[$i];
    		}else{
    			$right[]=$arr[$i];
    		}
    	}
    	//递归调用
    	$left  = $this->QuickSort($left);
    	$right = $this->QuickSort($right);
    	//将所有的结果合并
    	if($arr[0]['expiry_time']>$t){
    		$arr[0]['is_expiry'] = '1';
    	}else{
    		$arr[0]['is_expiry'] = '2';
    	}
    	return array_merge($left,array($arr[0]),$right);
    }
    
    
}
