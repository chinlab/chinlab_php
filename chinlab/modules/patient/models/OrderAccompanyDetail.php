<?php

namespace app\modules\patient\models;
use yii\db\ActiveRecord;
use yii\behaviors\TimestampBehavior;
use Yii;

/**
 * This is the model class for table "order_accompany_detail".
 *
 * @property integer $order_id
 * @property integer $address_id
 * @property integer $user_id
 * @property string $user_name
 * @property integer $user_district_id
 * @property string $user_district_address
 * @property string $user_detail_address
 * @property string $user_phone
 * @property integer $is_express
 * @property integer $express_id
 * @property integer $goods_id
 * @property string $goods_name
 * @property integer $goods_type
 * @property integer $goods_expire_time
 * @property string $goods_big_image
 * @property string $goods_small_image
 * @property string $goods_image
 * @property string $goods_amount
 * @property integer $goods_onsalt_time
 * @property integer $is_onsalt
 * @property string $goods_service
 * @property integer $goods_service_limit
 * @property string $goods_url
 * @property string $detail_url
 * @property string $now_price
 * @property string $freight_price
 * @property integer $is_invoice
 * @property integer $invoice_type
 * @property string $invoice_title
 * @property string $invoice_content
 * @property string $order_detail_note
 * @property integer $create_time
 * @property integer $update_time
 * @property integer $is_delete
 */
class OrderAccompanyDetail extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'order_accompany_detail';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [];
    }
    
    public function afterSave($insert, $changedAttributes)
    {
    	parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    	//$this->orderDowith($insert,$changedAttributes);
    }
     
    private function orderDowith($insert,$changedAttributes)
    {
    	$data = $this->toArray();
    	if(!isset($data['order_id'])){
    		return '';
    	}
    	$command = Yii::$app->db;
    	foreach($data as $k => $v) {
    		if (!is_string($v) && !is_int($v)) {
    			unset($data[$k]);
    		}
    	}
    	if($insert) {
    		//这里是新增数据
    		return  $command->createCommand()->insert(
    				'order_multi_backend', $data)->execute();
    	} else {
    		//这里是更新数据
    		return  $command->createCommand()->update(
    				'order_multi_backend', $data,
    				'order_id=:order_id',[':order_id'=>$data['order_id']])->execute();
    	}
    }
    

    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
                'attributes' => [
                    ActiveRecord::EVENT_BEFORE_INSERT => ['create_time', 'update_time'],
                    ActiveRecord::EVENT_BEFORE_UPDATE => ['update_time'],
                ],
                //'value' => new Expression('NOW()'),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'order_id' => 'Order ID',
            'address_id' => 'Address ID',
            'user_id' => 'User ID',
            'user_name' => 'User Name',
            'user_district_id' => 'User District ID',
            'user_district_address' => 'User District Address',
            'user_detail_address' => 'User Detail Address',
            'user_phone' => 'User Phone',
            'is_express' => 'Is Express',
            'express_id' => 'Express ID',
            'goods_id' => 'Goods ID',
            'goods_name' => 'Goods Name',
            'goods_type' => 'Goods Type',
            'goods_expire_time' => 'Goods Expire Time',
            'goods_big_image' => 'Goods Big Image',
            'goods_small_image' => 'Goods Small Image',
            'goods_image' => 'Goods Image',
            'goods_amount' => 'Goods Amount',
            'goods_onsalt_time' => 'Goods Onsalt Time',
            'is_onsalt' => 'Is Onsalt',
            'goods_service' => 'Goods Service',
            'goods_service_limit' => 'Goods Service Limit',
            'goods_url' => 'Goods Url',
            'detail_url' => 'Detail Url',
            'now_price' => 'Now Price',
            'freight_price' => 'Freight Price',
            'is_invoice' => 'Is Invoice',
            'invoice_type' => 'Invoice Type',
            'invoice_title' => 'Invoice Title',
            'invoice_content' => 'Invoice Content',
            'order_detail_note' => 'Order Detail Note',
            'create_time' => 'Create Time',
            'update_time' => 'Update Time',
            'is_delete' => 'Is Delete',
        ];
    }
}
